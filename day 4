DAY 4(Sorting)
2160. Minimum Sum of Four Digit Number After Splitting Digits

    public int minimumSum(int num) {
        int sum=0;
        int [] arr=new int[4];
        for(int i=0;i<4;i++){
            arr[i]=num%10;
            num=num/10;
        }
        Arrays.sort(arr);
        
        sum=(arr[0]*10+arr[2])+(arr[1]*10+arr[3]);
        return sum;
    }
    
    1365. How Many Numbers Are Smaller Than the Current Number
    
    1)BRUTE FORCE METHOD
        public int[] smallerNumbersThanCurrent(int[] nums) {
    
        int [] result =new int[nums.length];
       
        for(int i=0;i<nums.length;i++){
             int count=0;
            for(int j=0;j<nums.length;j++){
                if(nums[j]<nums[i]){
                    count++;
                }
            }
            result[i]=count;
        }
        return result;
    }
    
    2)OPTIMISED METHOD
    
     public int[] smallerNumbersThanCurrent(int[] nums) {
       
        int [] result=new int[nums.length];
        int [] temp=new int[101];
        
        //Adding frequency of each element of nums in temp 
        for(int i=0;i<nums.length;i++){
            temp[nums[i]]++;
        }
        
        //Calculating running sum(sum of elements present before it)
        for(int i=1;i<101;i++){
           temp[i]=temp[i]+temp[i-1];
        }
        
        //Adding running sum into result array
        for(int i=0;i<nums.length;i++){
            if(nums[i]==0){
                result[i]=0;
            }else{
            result[i]=temp[nums[i]-1];
            }
        }
        return result;
    }
