DAY 5(TREE)
938. Range Sum of BST

 public int rangeSumBST(TreeNode root, int low, int high) {
       if (root == null) return 0; // base case.
        if (root.val < low) return rangeSumBST(root.right, low, high); // left branch excluded.
        if (root.val > high) return rangeSumBST(root.left, low, high); // right branch excluded.
        return root.val + rangeSumBST(root.right, low, high) + rangeSumBST(root.left, low, high); // count in both children.
    }
    
    700. Search in a Binary Search Tree
      public TreeNode searchBST(TreeNode root, int val) {
      
       if(root==null) return root;
        if(root.val==val) {
            return root;
        }else{
            return root=val<root.val?searchBST(root.left,val):searchBST(root.right,val);
        }
    }
