DAY 5(TREE)
938. Range Sum of BST(**)

 public int rangeSumBST(TreeNode root, int low, int high) {
       if (root == null) return 0; // base case.
        if (root.val < low) return rangeSumBST(root.right, low, high); // left branch excluded.
        if (root.val > high) return rangeSumBST(root.left, low, high); // right branch excluded.
        return root.val + rangeSumBST(root.right, low, high) + rangeSumBST(root.left, low, high); // count in both children.
    }
    
    700. Search in a Binary Search Tree(**)
      public TreeNode searchBST(TreeNode root, int val) {
      
     if(root==null) return root;
        if(root.val==val) return root;
        if(val<root.val) return searchBST(root.left,val);
        return searchBST(root.right,val);
    }
    
    1480. Running Sum of 1d Array
    
       public int[] runningSum(int[] nums) {
        
       for(int i=1;i<nums.length;i++){
           nums[i]+=nums[i-1];
       }
        return nums;
    }

1108. Defanging an IP Address

  public String defangIPaddr(String address) {
        return address.replace(".","[.]");

    }
